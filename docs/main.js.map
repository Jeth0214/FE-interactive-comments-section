{"version":3,"sources":["./src/app/helper/pipe/get-ago.pipe.ts","./src/app/comments-section/comments-section.component.html","./src/app/comments-section/comments-section.component.ts","./src/app/components/modal/modal.component.ts","./src/app/components/modal/modal.component.html","./src/app/components/modal/modal.service.ts","./src/environments/environment.ts","./src/app/components/vote-button/vote-button.component.ts","./src/app/components/vote-button/vote-button.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/components.module.ts","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/comments.service.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'getAgo'\r\n})\r\nexport class GetAgoPipe implements PipeTransform {\r\n\r\n  transform(time: string): string {\r\n    let createdAt = new Date(time);\r\n    let getMs = (new Date().getTime() - createdAt.getTime()) / 1000;\r\n    let ago = \"\";\r\n\r\n    // with less than 1 minute return 1m\r\n    if( getMs < 60 ) {\r\n      ago = \"sec ago\";\r\n    \r\n    // with less than 1 hour return mins\r\n    } else if( getMs < 3600 && getMs > 60 ) {\r\n      ago = Math.floor( getMs / 60 ) + \" min ago\";\r\n      \r\n    // with less than 1 day return hour \r\n    } else if(getMs < 86400 && getMs > 3600  ) {\r\n      ago = Math.floor(getMs /  3600) + \" hour ago\";\r\n    }\r\n    \r\n    // with less than 1 week  return day\r\n  else if (getMs < 604800 && getMs > 86400) {\r\n    ago = Math.floor(getMs / 86400) + \" day ago\";\r\n  }\r\n  \r\n  // with less than 1 month return weeks\r\n    else if ( getMs < 2419200 && getMs > 604800 ) {\r\n    ago = Math.floor(getMs / 604800) + \" weeks ago\";\r\n    }\r\n  \r\n    // with less than 1 year return month\r\n    else if ( getMs < 31104000 && getMs > 2419200 ) {\r\n      ago = Math.floor(getMs / 2419200) + \" month ago\";\r\n    }\r\n    \r\n    // with more than 1 year return year\r\n    else {\r\n      ago = Math.floor(getMs / 3.154e7) + \" year ago\";\r\n    }\r\n    \r\n    return ago;\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"comments\">\r\n    <!-- show all comments -->\r\n    <div class=\"comments\" *ngFor=\"let comment of comments\">\r\n        <app-card [comment]=\"comment\" [currentUser]=\"currentUser\" (update)=\"updateComment($event)\"\r\n            (delete)=\"onDeleteComment($event)\" (vote)=\"updateScore($event)\">\r\n        </app-card>\r\n\r\n        <!-- All REplies -->\r\n        <div class=\"replies\" *ngIf=\"comment.replies.length > 0\">\r\n            <div *ngFor=\"let reply of comment.replies\">\r\n                <app-card [comment]=\"reply\" [currentUser]=\"currentUser\" (update)=\"updateComment($event)\"\r\n                    (delete)=\"onDeleteComment($event)\" (vote)=\"updateScore($event)\">\r\n                </app-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- main comment form -->\r\n    <app-form [currentUser]=\"currentUser\" (add)=\"addComment($event)\"></app-form>\r\n</ng-container>\r\n\r\n\r\n<modal id=\"modal-1\">\r\n    <h3 class=\"fw-500 modal-title\">Delete comment</h3>\r\n    <p class=\"modal-context\">Are you sure you want to delete this comment? This will remove the comment and can’t be\r\n        undone.</p>\r\n    <div class=\"update__btns d-flex\">\r\n        <button class=\"btn bg-grayish-blue btn-secondary-fill\" (click)=\"onCancel()\">NO, CANCEL</button>\r\n        <button class=\"btn bg-soft-red btn-delete-fill\" (click)=\"deleteComment()\">YES, DELETE</button>\r\n    </div>\r\n</modal>","import { Component, OnInit } from '@angular/core';\r\nimport { CommentsService } from '../comments.service';\r\nimport { Comment } from '../models/comment';\r\nimport { User } from '../models/user';\r\nimport { ModalService } from '../components/modal/modal.service';\r\nimport { Reply } from '../models/reply';\r\n\r\n@Component({\r\n  selector: 'app-comments-section',\r\n  templateUrl: './comments-section.component.html',\r\n  styleUrls: ['./comments-section.component.scss']\r\n})\r\nexport class CommentsSectionComponent implements OnInit {\r\n\r\n  comments: Comment[];\r\n  currentUser: User;\r\n  commentToDelete: Comment | Reply;\r\n  \r\n\r\n  constructor( private commentService: CommentsService, private modalService: ModalService ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.commentService.getUser();\r\n    this.getAllComments();\r\n  }\r\n\r\n  getAllComments() {\r\n    this.comments = this.commentService.getComments();\r\n  }\r\n\r\n  addComment(newComment: Comment) {\r\n   this.comments = this.commentService.addComment(newComment);\r\n  }\r\n  \r\n  updateComment(comment: Comment) {\r\n     this.commentService.updateComment(comment)\r\n  }\r\n\r\n  onDeleteComment(comment) {\r\n    this.commentToDelete = comment;\r\n    this.modalService.open('modal-1');\r\n  }\r\n\r\n  deleteComment() {\r\n    console.log(this.commentToDelete);\r\n    this.comments = this.commentService.deleteComment(this.commentToDelete);\r\n    this.onCancel();\r\n  }\r\n\r\n  onCancel() {\r\n    this.modalService.close('modal-1');\r\n  }\r\n\r\n  updateScore(comment) {\r\n    this.updateComment(comment);\r\n  }\r\n\r\n \r\n   \r\n}\r\n","import { Component, ElementRef, OnDestroy, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { ModalService } from './modal.service';\r\n\r\n@Component({\r\n  selector: 'modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: string;\r\n  private element: any\r\n\r\n  constructor( private modalService: ModalService, private el: ElementRef) { \r\n    this.element = el.nativeElement\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     // ensure id attribute exists\r\n    if (!this.id) {\r\n        console.error('modal must have an id');\r\n        return;\r\n    }\r\n\r\n    document.body.appendChild(this.element)\r\n\r\n    this.element.addEventListener('click', el => {\r\n      if(el.target.className == 'modal') {\r\n        this.close();\r\n      }\r\n    })\r\n\r\n     this.modalService.add(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.modalService.remove(this.id);\r\n    this.element.remove();\r\n  }\r\n\r\n  open(): void {\r\n    this.element.style.display = 'block';\r\n    document.body.classList.add('modal-open');\r\n  }\r\n\r\n  close(): void {\r\n    this.element.style.display = 'none';\r\n    document.body.classList.remove('modal-open');\r\n  }\r\n\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"modal-background\"></div>\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n\r\n  private modals: any = [];\r\n\r\n  constructor() { }\r\n\r\n   add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n   open(id: string) {\r\n        // open modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.close();\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\nimport { Vote } from 'src/app/models/vote';\r\n\r\n@Component({\r\n  selector: 'app-vote-button',\r\n  templateUrl: './vote-button.component.html',\r\n  styleUrls: ['./vote-button.component.scss']\r\n})\r\nexport class VoteButtonComponent implements OnInit {\r\n  @Input() vote: any;\r\n  @Input()currentUser : User;\r\n  @Output() voted = new EventEmitter< Vote > ();\r\n  voter: any;\r\n  voterIndex: number;\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n\r\n  voteUp() {\r\n    this.findVoter(this.currentUser.username);\r\n    if(!this.voter ) {\r\n      this.countVote('up');\r\n      this.vote.voters.push(this.voter)\r\n    } else {\r\n      if(this.voter.up) {\r\n        return;\r\n      } \r\n      this.countVote('up');\r\n      this.vote.voters[this.voterIndex] = this.voter\r\n    }\r\n    this.voted.emit(this.vote)\r\n  }\r\n\r\n   voteDown() {\r\n      this.findVoter(this.currentUser.username);\r\n      if(!this.voter ) {\r\n          this.countVote('down');\r\n        this.vote.voters.push(this.voter)\r\n      } else {\r\n        if(this.voter.down) {\r\n          return;\r\n        } \r\n        this.countVote('down');\r\n        this.vote.voters[this.voterIndex] = this.voter\r\n      }\r\n      this.voted.emit(this.vote)\r\n    }\r\n\r\n\r\n  private countVote(vote) {\r\n    if(vote === 'up') {\r\n        this.vote.score++;\r\n        this.voter = {\r\n          name: this.currentUser.username,\r\n          up: true,\r\n          down: false\r\n      }\r\n    } else {\r\n      this.vote.score--;\r\n       this.voter = {\r\n          name: this.currentUser.username,\r\n          up: false,\r\n          down: true\r\n      }\r\n    }  \r\n  }\r\n\r\n\r\n  private findVoter(name) {\r\n    this.voterIndex = this.vote.voters.findIndex( voter =>  {return voter.name == name});\r\n    this.voter = this.vote.voters[this.voterIndex];\r\n  }\r\n\r\n}\r\n","<div class=\"btn__votes bg-very-light-gray\">\r\n    <a class=\"upvote text-light-grayish-blue\" (click)=\"voteUp()\">\r\n        <i class=\"fa-solid fa-plus\"></i>\r\n    </a>\r\n    <p class=\"text-blue fw-500\">{{ vote.score }}</p>\r\n    <a class=\"downvote text-light-grayish-blue\" (click)=\"voteDown()\">\r\n        <i class=\"fa-solid fa-minus\"></i>\r\n    </a>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Interactive Comments Section';\r\n}\r\n","<main class=\"container\">\r\n    <h1 class=\"sr-only\">\r\n        Interactive Comment Section\r\n    </h1>\r\n    <app-comments-section></app-comments-section>\r\n</main>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { CommentsSectionComponent } from './comments-section/comments-section.component';\r\nimport { CommentsService } from './comments.service';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CommentsSectionComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ComponentsModule,\r\n    TimeagoModule.forRoot()\r\n  ],\r\n  providers: [\r\n    CommentsService,\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CardComponent } from './card/card.component';\r\nimport { VoteButtonComponent } from './vote-button/vote-button.component';\r\nimport { FormComponent } from './form/form.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { GetAgoPipe } from '../helper/pipe/get-ago.pipe';\r\nimport { ModalComponent } from './modal/modal.component';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CardComponent,\r\n    VoteButtonComponent,\r\n    FormComponent,\r\n    GetAgoPipe,\r\n    ModalComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TimeagoModule\r\n  ],\r\n  exports: [\r\n    CardComponent,\r\n    VoteButtonComponent,\r\n    FormComponent,\r\n    ModalComponent,\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Comment } from 'src/app/models/comment';\r\nimport { User } from 'src/app/models/user';\r\nimport { getAgoTime } from 'src/app/helper/date';\r\nimport { Reply } from 'src/app/models/reply';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() comment: Comment;\r\n  @Input() currentUser: User;\r\n  @Output() update = new EventEmitter<Comment>();\r\n  @Output() delete = new EventEmitter<Comment | Reply>();\r\n  @Output() vote = new EventEmitter<Comment>();\r\n\r\n  commentToUpdate: string = \"\";\r\n  onEditMode = false;\r\n  createdAt: string;\r\n  showForm = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.commentToUpdate = this.comment.content;\r\n  }\r\n\r\n\r\n  onDelete(comment: Reply | Comment) {\r\n    //console.log(comment);\r\n    this.delete.emit(comment);\r\n  }\r\n\r\n  onEdit() {\r\n    this.onEditMode = !this.onEditMode;\r\n  }\r\n\r\n  onCancel() {\r\n    this.commentToUpdate = this.comment.content;\r\n    this.onEditMode = false;\r\n  }\r\n\r\n\r\n  updateComment(comment: Comment) {\r\n\r\n    if (this.commentToUpdate == \"\" || this.commentToUpdate == undefined) {\r\n      return;\r\n    }\r\n\r\n    comment.content = this.commentToUpdate.trim();\r\n    console.log(comment)\r\n    this.update.emit(comment);\r\n    this.onEditMode = false;\r\n  }\r\n\r\n  onVote(vote) {\r\n    //console.log(vote);\r\n    this.comment.vote = vote;\r\n    this.vote.emit(this.comment);\r\n  }\r\n\r\n  onReply(e) {\r\n    this.showForm = !this.showForm;\r\n    //this.reply.emit(username);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearInterval();\r\n  }\r\n\r\n}\r\n","<div class=\"card bg-white d-flex\">\r\n    <div class=\"card__vote\">\r\n        <app-vote-button [vote]=\"comment.vote\" (voted)=\"onVote($event)\" [currentUser]=\"currentUser\"></app-vote-button>\r\n    </div>\r\n\r\n    <div class=\"card__content\">\r\n        <div class=\"card__header d-flex\">\r\n            <div class=\"card__image\">\r\n                <img [src]=\"comment.user.image.png\" alt=\"comment.user.username\">\r\n            </div>\r\n            <p class=\"card__name text-dark-blue fw-500\">\r\n                {{ comment.user.username }}\r\n            </p>\r\n\r\n            <p *ngIf=\"comment.user.username === currentUser.username\" class=\"bg-blue text-white you\">you</p>\r\n            <p>{{ comment.createdAt | timeago }}</p>\r\n        </div>\r\n\r\n        <div class=\"card__buttons\">\r\n            <a class=\"btn-reply text-blue fw-500\"\r\n                *ngIf=\"comment.user.username !== currentUser.username else editDeleteBtns\" (click)=\"onReply()\">\r\n                <i class=\"fa-solid fa-reply\"></i>\r\n                <span>Reply</span>\r\n            </a>\r\n        </div>\r\n\r\n        <ng-template #editDeleteBtns>\r\n            <div class=\"btn-edit-delete\">\r\n                <a (click)=\"onDelete(comment)\" class=\"btn-delete text-soft-red fw-500\"> <i\r\n                        class=\"fa-solid fa-trash\"></i> Delete</a>\r\n                <a *ngIf=\"!onEditMode\" (click)=\"onEdit()\" class=\"btn-edit text-blue fw-500\"> <i\r\n                        class=\"fa-solid fa-pen\"></i> Edit</a>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <p *ngIf=\"!onEditMode\" class=\"card__text\">\r\n            <span class=\"text-blue fw-500\" *ngIf=\"comment.replyingTo\">@{{ comment.replyingTo }}</span> {{\r\n            comment.content }}\r\n        </p>\r\n\r\n        <div *ngIf=\"onEditMode\">\r\n            <div class=\"reply__form\">\r\n                <textarea placeholder=\"Add a comment...\" class=\"text-area text-grayish-blue ff-rubik text-area--comment\"\r\n                    [(ngModel)]=\"commentToUpdate\" name=\"reply\" id=\"reply\" cols=\"100\" rows=\"10\"></textarea>\r\n            </div>\r\n            <div class=\"update__btns\">\r\n                <button class=\"btn btn-outline--primary\" (click)=\"onCancel()\">Cancel</button>\r\n                <button class=\"btn bg-blue\" (click)=\"updateComment(comment)\">Update</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- If main comment has no reply yet show this form -->\r\n<ng-container *ngIf=\"showForm\">\r\n    <app-form [currentUser]=\"currentUser\" [replyingTo]=\"comment\" (onReplyMode)=\"onReply($event)\"></app-form>\r\n</ng-container>","import { Injectable } from '@angular/core';\r\nimport * as commentsData from '../assets/json/data.json';\r\nimport { Comment } from './models/comment';\r\nimport { Reply } from './models/reply';\r\nimport { User } from './models/user';\r\n\r\nconst commentsStorageName = \"comments\";\r\nconst userStorageName = \"user\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentsService {\r\n\r\n  private comments: Comment[];\r\n  private user: User;\r\n\r\n  constructor() {\r\n    this.comments = JSON.parse(localStorage.getItem(commentsStorageName)) || commentsData.comments;\r\n    this.user = JSON.parse(localStorage.getItem(userStorageName)) || commentsData.currentUser;\r\n    console.log('comments storage', this.comments)\r\n  }\r\n\r\n  // get user\r\n  getUser() {\r\n    return this.user;\r\n  }\r\n\r\n  // get all comments\r\n  getComments() {\r\n    return [...this.comments];\r\n  }\r\n  // add a new comment\r\n  addComment(newComment, id?: number) {\r\n    //console.log(id)\r\n    if (id) {\r\n      let comment = this.findComment(id);\r\n      console.log(comment)\r\n      let index = this.findCommentIndex(comment);\r\n      this.comments[index].replies.push(newComment);\r\n    } else {\r\n      this.comments.push(newComment);\r\n    }\r\n\r\n    return this.updateStorage();\r\n  }\r\n\r\n  // update  comment\r\n  updateComment(updatedComment: Comment) {\r\n    let index = this.findCommentIndex(updatedComment)\r\n    this.comments[index] = updatedComment;\r\n    return this.updateStorage();\r\n  }\r\n\r\n  // delete comment\r\n  deleteComment(newComment) {\r\n    if (newComment.replyingTo) {\r\n      let repliedToThisComment = this.findComment(newComment.comment_id);\r\n      let index = this.findCommentIndex(repliedToThisComment);\r\n      let insertComment = repliedToThisComment.replies.filter(reply => { return reply.id !== newComment.id })\r\n      repliedToThisComment.replies = insertComment;\r\n      this.comments[index] = repliedToThisComment\r\n    } else {\r\n      this.comments = this.comments.filter(comment => { return comment.id !== newComment.id });\r\n      console.log(this.comments)\r\n    }\r\n    return this.updateStorage()\r\n  }\r\n\r\n  // update storage after operation\r\n  private updateStorage() {\r\n    localStorage.setItem(commentsStorageName, JSON.stringify(this.comments))\r\n    return this.getComments();\r\n  }\r\n\r\n  private findCommentIndex(comment) {\r\n    return this.comments.indexOf(comment);\r\n  }\r\n  private findComment(id) {\r\n    return this.comments.filter(comment => { return comment.id === id })[0];\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { CommentsService } from 'src/app/comments.service';\r\nimport { Comment } from 'src/app/models/comment';\r\nimport { Reply } from 'src/app/models/reply';\r\nimport { User } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss']\r\n})\r\nexport class FormComponent implements OnInit, AfterViewInit {\r\n  @Input() currentUser: User;\r\n  @Input() replyingTo;\r\n  @Output() add = new EventEmitter<Comment | Reply>();\r\n  @Output() onReplyMode = new EventEmitter<Reply>();\r\n\r\n  @ViewChild(\"textarea\") textarea: ElementRef\r\n\r\n  comment: string;\r\n\r\n  constructor(private commentService: CommentsService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.replyingTo) {\r\n      this.comment = `@${this.replyingTo.user.username} `\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.replyingTo) {\r\n      this.textarea.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  addComment() {\r\n    if (this.comment === \"\" || this.comment == undefined) {\r\n      return;\r\n    }\r\n    const prevalue = {\r\n      id: Date.now() as number,\r\n      content: this.comment.trim(),\r\n      createdAt: new Date().toString(),\r\n      user: this.currentUser,\r\n      vote: {\r\n        score: 0,\r\n        voters: []\r\n      },\r\n    }\r\n    if (this.replyingTo) {\r\n      let comment_id = this.replyingTo.comment_id ? this.replyingTo.comment_id : this.replyingTo.id;\r\n      prevalue.content = this.comment.replace(`@${this.replyingTo.user.username} `, '')\r\n      let reply: Reply = { ...prevalue, replyingTo: this.replyingTo.user.username, comment_id: comment_id }\r\n      this.commentService.addComment(reply, comment_id);\r\n      this.onReplyMode.emit(reply);\r\n    } else {\r\n      let newComment: Comment = { ...prevalue, replies: [] }\r\n      this.add.emit(newComment)\r\n    }\r\n    this.comment = \"\";\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"reply d-grid bg-white\" >\r\n    <div class=\"reply__image\">\r\n        <img [src]=\"currentUser.image.png\" [alt]=\"currentUser.username\">\r\n    </div>\r\n    <div class=\"reply__form\">\r\n        <textarea #textarea [placeholder]=\" replyingTo? '' : 'Add a comment...'\" class=\"text-area text-grayish-blue ff-rubik\" [(ngModel)]=\"comment\" name=\"reply\" id=\"reply\" cols=\"30\" rows=\"10\"></textarea>\r\n    </div>\r\n    <div class=\"reply__btn\">\r\n        <button class=\"btn bg-blue\" (click)=\"addComment()\">Send</button>\r\n    </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}